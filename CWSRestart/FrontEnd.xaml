<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ss="clr-namespace:ServerService;assembly=ServerService"
        xmlns:ssh="clr-namespace:ServerService.Helper;assembly=ServerService"
        xmlns:Helper="clr-namespace:CWSRestart.Helper"
        xmlns:Controls="clr-namespace:CWSRestart.Controls"
        x:Class="CWSRestart.FrontEnd"
        xmlns:IS="clr-namespace:CWSRestart.Infrastructure"
        Title="CWS Restart" Height="700" Width="800" MinHeight="600" MinWidth="800"
        x:Name="FrontEndControl" Closing="FrontEndControl_Closing"
    >

    <Window.Resources>
        <Helper:IPAddressToStringConverter x:Key="IPAddressToStringConverter"/>
        <Helper:BooleanToInverseBooleanConverter x:Key="BooleanToInverseBooleanConverter" />
        <Helper:AllBoolsTrueConverter x:Key="AllBoolsTrueConverter" />
        <Helper:OneBoolTrueConverter x:Key="OneBoolTrueConverter" />
        <Helper:StringIsNotEmpty x:Key="StringIsNotEmpty" />
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
    </Window.Background>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Expander Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"  Header="Configuration" HorizontalAlignment="Stretch" IsExpanded="True">
            <StackPanel Orientation="Vertical" Margin="2,0">
                <DockPanel  Margin="0,3">
                    <Label Width="70" DockPanel.Dock="Left" Content="External IP:"/>
                    <Button x:Name="RefreshExternalButton" Width="75" DockPanel.Dock="Right" Content="Refresh" Click="RefreshExternalButton_Click"/>
                    <TextBox Text="{Binding Internet, Converter={StaticResource IPAddressToStringConverter}, Mode=TwoWay, Source={x:Static ssh:Settings.Instance}}" Margin="0,0,2,0"/>
                </DockPanel>
                <DockPanel  Margin="0,3">
                    <Label Width="70" DockPanel.Dock="Left" Content="LAN IP:"/>
                    <Button x:Name="RefreshLanButton" Width="75" DockPanel.Dock="Right" Content="Refresh" Click="RefreshLanButton_Click"/>
                    <TextBox Text="{Binding LAN, Converter={StaticResource IPAddressToStringConverter}, Mode=TwoWay, Source={x:Static ssh:Settings.Instance}}" Margin="0,0,2,0" />
                </DockPanel>
                <DockPanel  Margin="0,3">
                    <Label DockPanel.Dock="Left" Content="When the server is not responding, restart with:"/>
                    <Button x:Name="SelectServerButton" Content="Select..." Width="75" DockPanel.Dock="Right" Click="SelectServerButton_Click" />
                    <TextBox Text="{Binding ServerPath, Mode=TwoWay, Source={x:Static ssh:Settings.Instance}}" Margin="0,0,2,0" />
                </DockPanel>
                <DockPanel Margin="0,3">
                    <Label DockPanel.Dock="Left" Content="Check for access from:"/>
                    <CheckBox IsChecked="{Binding CheckInternet, Mode=TwoWay, Source={x:Static ssh:Settings.Instance}}" DockPanel.Dock="Left" VerticalAlignment="Center" Width="90" Content="Internet"/>
                    <CheckBox IsChecked="{Binding CheckLAN, Mode=TwoWay, Source={x:Static ssh:Settings.Instance}}" DockPanel.Dock="Left" VerticalAlignment="Center" Width="90" Content="LAN"/>
                    <CheckBox IsChecked="{Binding CheckLoopback, Mode=TwoWay, Source={x:Static ssh:Settings.Instance}}" DockPanel.Dock="Left" VerticalAlignment="Center" Width="90" Content="Loopback"/>
                    <Button DockPanel.Dock="Right" x:Name="AdditionalProcesses" Padding="4,0" Click="AdditionalProcesses_Click">Additional processes</Button>
                    <TextBox Width="150" DockPanel.Dock="Right"  Margin="0,0,2,0" Text="{Binding ServerProcessName, Mode=TwoWay, Source={x:Static ssh:Settings.Instance}}" />
                    <Label DockPanel.Dock="Right" Content="Process:"/>
                    <Label />
                </DockPanel>
            </StackPanel>
        </Expander>

        <Expander Grid.Row="1" Grid.Column="0" IsExpanded="True" Header="">
            <DockPanel Width="160">
                <GroupBox Header="General" Margin="2,0" DockPanel.Dock="Top">
                    <StackPanel Orientation="Vertical">
                        <Button Margin="1,1" Height="26" x:Name="ValidateButton" Click="ValidateButton_Click" Content="Validate configuration">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource AllBoolsTrueConverter}">
                                    <Binding Source="{x:Static ssh:Settings.Instance}" Path="Validates" />
                                    <Binding Source="{x:Static ss:Validator.Instance}" Path="Working" Converter="{StaticResource BooleanToInverseBooleanConverter}" />
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                        <Button Margin="1,1" Height="26" x:Name="UpdateButton" Click="UpdateButton_Click">Check for updates</Button>
                        <Button IsEnabled="{Binding LAN, Converter={StaticResource StringIsNotEmpty}, Source={x:Static ssh:Settings.Instance}}" Margin="1,1" Height="26" x:Name="UPnPButton" Click="UPnPButton_Click">UPnP</Button>
                        <Button Margin="1,1" Height="26" x:Name="StatsFolderButton" Click="StatsFolderButton_Click">Save statistics to...</Button>
                        <Button Margin="1,1" Height="26" x:Name="ToggleInterProcessCommunication" Content="{Binding ButtonText, Source={x:Static IS:Server.Instance}}" Click="ToggleInterProcessCommunication_Click" />
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Watcher" Margin="2,0" DockPanel.Dock="Top">
                    <StackPanel Orientation="Vertical">
                        <Button Margin="1,1" Content="{Binding ButtonText, Source={x:Static Helper:Watcher.Instance}}" Height="26" x:Name="ToggleWatcher" Click="ToggleWatcher_Click">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource AllBoolsTrueConverter}">
                                    <Binding Source="{x:Static ssh:Settings.Instance}" Path="Validates" />
                                    <Binding Source="{x:Static Helper:Watcher.Instance}" Path="IsBlocked" Converter="{StaticResource BooleanToInverseBooleanConverter}" />
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                        <DockPanel>
                            <Label DockPanel.Dock="Left">Interval in seconds:</Label>
                            <TextBox IsEnabled="{Binding IsBlocked, Source={x:Static Helper:Watcher.Instance}, Converter={StaticResource BooleanToInverseBooleanConverter}}" Margin="2,2" Width="Auto" Text="{Binding IntervallSeconds, Source={x:Static Helper:Watcher.Instance}}" x:Name="IntervallTextbox" KeyDown="IntervallTextbox_KeyDown"></TextBox>
                        </DockPanel>
                        <ProgressBar IsIndeterminate="{Binding IsBlocked, Source={x:Static Helper:Watcher.Instance}}" Minimum="0" Maximum="{Binding IntervallSeconds, Source={x:Static Helper:Watcher.Instance}}" Value="{Binding CurrentStep, Source={x:Static Helper:Watcher.Instance}}" Height="26"></ProgressBar>
                    </StackPanel>
                </GroupBox>
                <GroupBox DockPanel.Dock="Top" Header="Access" Margin="2,0">
                    <Button Height="26" x:Name="IpFilterButton" Click="IpFilterButton_Click" Content="IP Filter">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource OneBoolTrueConverter}">
                                <Binding ElementName="FrontEndControl" Path="Stats.Enabled" />
                                <Binding Path="ExternalAccessControl" Source="{x:Static ssh:Settings.Instance}" />
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                </GroupBox>
                <TextBlock Width="Auto" DockPanel.Dock="Bottom" HorizontalAlignment="Center" Margin="2,4"><Hyperlink NavigateUri="http://chrisk91.github.io/CWSRestart/" RequestNavigate="Hyperlink_RequestNavigate">Visit project website</Hyperlink></TextBlock>
                <GroupBox Header="Server" Margin="2,1" DockPanel.Dock="Bottom">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button IsEnabled="{Binding Validates, Source={x:Static ssh:Settings.Instance}}" Grid.Column="0" x:Name="StartServerButton" Click="StartServerButton_Click">Start</Button>
                        <Button IsEnabled="{Binding Validates, Source={x:Static ssh:Settings.Instance}}" Grid.Column="1" x:Name="StopServerButton" Click="StopServerButton_Click">Stop</Button>
                        <Button IsEnabled="{Binding Validates, Source={x:Static ssh:Settings.Instance}}" Grid.Column="2" x:Name="RestartServerButton" Click="RestartServerButton_Click">Restart</Button>
                    </Grid>
                </GroupBox>
                <Label></Label>
            </DockPanel>
        </Expander>

        <Controls:LogFilter x:Name="LogControl" Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch" Margin="0,9,0,0" />
        <StatusBar Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" BorderThickness="0,1,0,0">
            <StatusBar.BorderBrush>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
            </StatusBar.BorderBrush>
            <StatusBarItem>
                <Label Padding="4,0">Active players:</Label>
            </StatusBarItem>
            <StatusBarItem>
                <Label Padding="4,0" Content="{Binding Stats.ConnectedPlayers.Count, ElementName=FrontEndControl, FallbackValue='1'}" />
            </StatusBarItem>
            <StatusBarItem>
                <Label Padding="4,0">Total unique players:</Label>
            </StatusBarItem>
            <StatusBarItem>
                <Label Padding="4,0" Content="{Binding Stats.Players.Count, ElementName=FrontEndControl, FallbackValue='1'}" />
            </StatusBarItem>
            <StatusBarItem>
                <Label Padding="4,0">Runtime:</Label>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Padding="4,0">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0:00}:{1:00}:{2:00}">
                            <Binding ElementName="FrontEndControl" Path="Stats.Runtime.TotalHours" FallbackValue="87" />
                            <Binding ElementName="FrontEndControl" Path="Stats.Runtime.Minutes" FallbackValue="00" />
                            <Binding ElementName="FrontEndControl" Path="Stats.Runtime.Seconds" FallbackValue="00" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                Current RAM:
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Padding="4,0" Text="{Binding Stats.CurrentMemoryUsage, ElementName=FrontEndControl, FallbackValue=123, StringFormat='{}{0:0} MB'}" />
            </StatusBarItem>
            <StatusBarItem>
                Peak RAM:
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Padding="4,0" Text="{Binding Stats.PeakMemoryUsage, ElementName=FrontEndControl, FallbackValue=123, StringFormat='{}{0:0} MB'}" />
            </StatusBarItem>
            <StatusBarItem>
                <Label Padding="4,0">Restarts:</Label>
            </StatusBarItem>
            <StatusBarItem>
                <Label Padding="4,0" Content="{Binding Stats.RestartCount, ElementName=FrontEndControl, FallbackValue='1'}" />
            </StatusBarItem>
            <StatusBarItem HorizontalContentAlignment="Right">
                <Button Content="{Binding Stats.ButtonText, ElementName=FrontEndControl, FallbackValue='Enable Statistics'}" Padding="4,0" x:Name="ToggleStatisticsButton" Click="ToggleStatisticsButton_Click"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
